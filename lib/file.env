// Widget _buildLabeledTextField(String label) {
  // Widget _buildDropdownField(String label, String value, {String? hint}) {
  //   final List<String> frequencyOptions = ['Everyday', 'Every X Day', 'Days'];
  //   String selectedOption = 'Everyday';
  //
  //   return Column(
  //     crossAxisAlignment: CrossAxisAlignment.start,
  //     children: [
  //       Text(
  //         'Frequency',
  //         style:  TextStyle(color: AppColors.secondary, fontWeight: FontWeight.bold),
  //       ),
  //       const SizedBox(height: 8),
  //       Container(
  //         padding: const EdgeInsets.symmetric(horizontal: 12),
  //         decoration: _boxDecoration(),
  //         child: DropdownButtonHideUnderline(
  //           child: DropdownButton<String>(
  //             value:selectedOption ,
  //             isExpanded: true,
  //             iconEnabledColor:AppColors.secondary,
  //             items:frequencyOptions.map((val) => DropdownMenuItem<String>(
  //               value: val,
  //               child: Text(val, style: const TextStyle(color: Colors.black87)),
  //             ))
  //                 .toList(),
  //             onChanged:  (value) {
  //             setState(() {
  //             selectedOption = value!;
  //             });},
  //           ),
  //         ),
  //       ),
  //       if (hint != null)
  //         Padding(
  //           padding: const EdgeInsets.only(top: 6),
  //           child: Text(hint, style: const TextStyle(color: Colors.black54, fontSize: 12)),
  //         ),
  //     ],
  //   );
  // }



    Widget _buildNotificationTime() {
      return Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'Notification Time',
            style: TextStyle(
              color: AppColors.secondary,
              fontWeight: FontWeight.bold,
            ),
          ),
          const SizedBox(height: 8),
          Container(
            decoration: _boxDecoration(),
            child: ListTile(
              title: const Text('Time', style: TextStyle(color: Colors.black87)),
              trailing: const Icon(Icons.access_time, color: Color(0xFF3b82f6)),
              onTap: () {},
            ),
          ),
        ],
      );
    }



    Widget _buildTimeList() {
      final times = ['07:00', '13:00', '19:00'];
      return Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'Notification Time',
            style: TextStyle(
              color: AppColors.secondary,
              fontWeight: FontWeight.bold,
            ),
          ),
          const SizedBox(height: 8),
          Container(
            decoration: _boxDecoration(),
            child: Column(
              children: times.map((time) {
                return ListTile(
                  title: Text(
                    time,
                    style: const TextStyle(color: Colors.black87),
                  ),
                  trailing: IconButton(
                    icon: const Icon(Icons.delete, color: Color(0xFF3b82f6)),
                    onPressed: () {},
                  ),
                );
              }).toList(),
            ),
          ),
          const SizedBox(height: 8),
          _buildAddButton(),
        ],
      );
    }

    Widget _buildNotificationSwitch() {
      return Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'Notification',
            style: TextStyle(
              color: AppColors.secondary,
              fontWeight: FontWeight.bold,
            ),
          ),
          const SizedBox(height: 8),
          Container(
            padding: const EdgeInsets.symmetric(horizontal: 16),
            decoration: _boxDecoration(),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                const Text('ON', style: TextStyle(color: Colors.black87)),
                Switch(
                  value: true,
                  activeColor: const Color(0xFF3b82f6),
                  onChanged: (_) {},
                ),
              ],
            ),
          ),
        ],
      );
    }

    Widget _buildDetailSetting() {
      return ExpansionTile(
        collapsedBackgroundColor: Colors.white,
        backgroundColor: Colors.white,
        collapsedShape: RoundedRectangleBorder(
          side: const BorderSide(color: Color(0xFF3b82f6)),
          borderRadius: BorderRadius.circular(10),
        ),
        shape: RoundedRectangleBorder(
          side: const BorderSide(color: Color(0xFF3b82f6)),
          borderRadius: BorderRadius.circular(10),
        ),
        title: const Text(
          'Detail Setting',
          style: TextStyle(color: Colors.black87),
        ),
        iconColor: const Color(0xFF3b82f6),
        children: const [
          Padding(
            padding: EdgeInsets.all(16),
            child: Text(
              'Here you can put additional settings or options.',
              style: TextStyle(color: Colors.black54),
            ),
          ),
        ],
      );
    }


    void showDaysOfWeekModal() {
      final List<String> allDays = [
        'Mon',
        'Tue',
        'Wed',
        'Thu',
        'Fri',
        'Sat',
        'Sun',
      ];
      final Set<String> selectedDays = {};

      showModalBottomSheet(
        context: context,
        backgroundColor: const Color(0xFF1C1C1E),
        shape: const RoundedRectangleBorder(
          borderRadius: BorderRadius.vertical(top: Radius.circular(24)),
        ),
        builder: (context) {
          return StatefulBuilder(
            builder: (context, setState) {
              return Padding(
                padding: const EdgeInsets.all(20),
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    const Text(
                      'Day of the Week',
                      style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                      ),
                    ),
                    const SizedBox(height: 12),
                    ...allDays.map((day) {
                      return CheckboxListTile(
                        value: selectedDays.contains(day),
                        onChanged: (bool? checked) {
                          setState(() {
                            checked!
                                ? selectedDays.add(day)
                                : selectedDays.remove(day);
                          });
                        },
                        title: Text(
                          day,
                          style: const TextStyle(color: Colors.white),
                        ),
                        controlAffinity: ListTileControlAffinity.leading,
                        activeColor: const Color(0xFF3b82f6),
                        checkColor: Colors.white,
                      );
                    }),
                    const SizedBox(height: 16),
                    ElevatedButton(
                      style: ElevatedButton.styleFrom(
                        backgroundColor: const Color(0xFF3b82f6),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(30),
                        ),
                        padding: const EdgeInsets.symmetric(
                          horizontal: 40,
                          vertical: 14,
                        ),
                      ),
                      onPressed: () => Navigator.pop(context),
                      child: const Text(
                        'Close',
                        style: TextStyle(color: Colors.white),
                      ),
                    ),
                  ],
                ),
              );
            },
          );
        },
      );
    }

    void showEveryXDaysModal() {

      showModalBottomSheet(
        context: context,
        backgroundColor: const Color(0xFF1C1C1E),
        shape: const RoundedRectangleBorder(
          borderRadius: BorderRadius.vertical(top: Radius.circular(24)),
        ),
        builder: (context) {
          return EveryXDayBottomSheet() ;
        },
      );
    }

  // Widget _buildSaveButton() {
  //   return Center(
  //     child: ElevatedButton(
  //       style: ElevatedButton.styleFrom(
  //         backgroundColor: const Color(0xFF3b82f6),
  //         shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(30)),
  //         padding: const EdgeInsets.symmetric(horizontal: 40, vertical: 14),
  //       ),
  //       onPressed: () {},
  //       child: const Text('Save', style: TextStyle(color: Colors.white, fontSize: 16)),
  //     ),
  //   );
  // }


    Widget buildAddButton() {
      return Center(
        child: ElevatedButton.icon(
          style: ElevatedButton.styleFrom(
            backgroundColor: const Color(0xFF3b82f6),
            shape: const StadiumBorder(),
            padding: const EdgeInsets.symmetric(horizontal: 24, vertical: 12),
            elevation: 4,
          ),
          onPressed: () {},
          icon: const Icon(Icons.add, color: Colors.white),
          label: const Text('Add', style: TextStyle(color: Colors.white)),
        ),
      );
    }


